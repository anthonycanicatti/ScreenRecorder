/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screenrecorder;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author Anthony Canicatti <a.canicatti@gmail.com>
 */
public class RecorderFrame extends javax.swing.JFrame {

    int pX, pY;
    RecorderFrame myself = this;
    String outputDir = null;
    boolean onCompleteShowFile = true;
    
    /**
     * Creates new form RecorderFrame
     */
    public RecorderFrame() {
        this.setUndecorated(true);
        initComponents();
        this.setLocationRelativeTo(null);
        setUpFrame();
    }

    /**
     * Set up frame movement on dragging title bar
     */
    private void setUpFrame(){
        titlePanel.addMouseListener(new MouseAdapter(){
            @Override
            public void mousePressed(MouseEvent me){
                pX = me.getX();
                pY = me.getY();
            }
            @Override
            public void mouseDragged(MouseEvent me){
                myself.setLocation(myself.getLocation().x + me.getX() - pX,
                            myself.getLocation().y + me.getY() - pY);
            }
        });
        titlePanel.addMouseMotionListener(new MouseMotionAdapter(){
            @Override
            public void mouseDragged(MouseEvent me){
                myself.setLocation(myself.getLocation().x + me.getX() - pX,
                            myself.getLocation().y + me.getY() - pY);
            }
        });
        JFileChooser fc = new JFileChooser();
        FileSystemView fw = fc.getFileSystemView();
        outputDir = fw.getDefaultDirectory().getAbsolutePath()+"\\ScreenRecord.mov";
        fileField.setText(outputDir);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        closeButton = new javax.swing.JLabel();
        minButton = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        recButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        fileField = new javax.swing.JTextField();
        outLabel = new javax.swing.JLabel();
        changeOutputButton = new javax.swing.JButton();
        onCompleteCheck = new javax.swing.JCheckBox();
        screenButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });

        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0), 5));

        titlePanel.setBackground(new java.awt.Color(153, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Screen Recorder");

        closeButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        closeButton.setForeground(new java.awt.Color(255, 255, 255));
        closeButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeButton.setText("X");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
        });

        minButton.setForeground(new java.awt.Color(255, 255, 255));
        minButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minButton.setText("__");
        minButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(minButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeButton))
                .addGap(0, 4, Short.MAX_VALUE))
        );

        statusLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        statusLabel.setText("Status: Ready");

        recButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/screenrecorder/res/rsz_record.png"))); // NOI18N
        recButton.setToolTipText("Start Recording");
        recButton.setFocusable(false);
        recButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recButtonActionPerformed(evt);
            }
        });

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/screenrecorder/res/st.png"))); // NOI18N
        stopButton.setEnabled(false);
        stopButton.setFocusable(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        fileField.setEditable(false);
        fileField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        fileField.setEnabled(false);

        outLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        outLabel.setText("Output File:");
        outLabel.setEnabled(false);

        changeOutputButton.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        changeOutputButton.setText("Change");
        changeOutputButton.setEnabled(false);
        changeOutputButton.setFocusable(false);
        changeOutputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeOutputButtonActionPerformed(evt);
            }
        });

        onCompleteCheck.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        onCompleteCheck.setSelected(true);
        onCompleteCheck.setText("Select file upon completion");
        onCompleteCheck.setFocusable(false);
        onCompleteCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCompleteCheckActionPerformed(evt);
            }
        });

        screenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/screenrecorder/res/rsz_1rsz_1rsz_camera-icon.png"))); // NOI18N
        screenButton.setToolTipText("Take a screenshot");
        screenButton.setFocusable(false);
        screenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                screenButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(recButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(screenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(outLabel))
                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(0, 26, Short.MAX_VALUE)
                        .addComponent(onCompleteCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(changeOutputButton))
                    .addComponent(fileField))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(outLabel)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stopButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(recButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(screenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeOutputButton)
                    .addComponent(statusLabel)
                    .addComponent(onCompleteCheck))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseEntered
        // TODO add your handling code here:
        closeButton.setForeground(Color.GRAY);
    }//GEN-LAST:event_closeButtonMouseEntered

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseExited
        // TODO add your handling code here:
        closeButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_closeButtonMouseExited

    private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeButtonMouseClicked

    private void minButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minButtonMouseEntered
        // TODO add your handling code here:
        minButton.setForeground(Color.GRAY);
    }//GEN-LAST:event_minButtonMouseEntered

    private void minButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minButtonMouseExited
        // TODO add your handling code here:
        minButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_minButtonMouseExited

    private void minButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minButtonMouseClicked
        // TODO add your handling code here:
        myself.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minButtonMouseClicked

    private void changeOutputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeOutputButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int retVal = chooser.showDialog(this, "Select Directory");
        if(retVal == JFileChooser.APPROVE_OPTION){
            outputDir = chooser.getSelectedFile().getAbsolutePath()+"\\ScreenRecord.mov";
            fileField.setText(outputDir);
        }
    }//GEN-LAST:event_changeOutputButtonActionPerformed

    private void recButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recButtonActionPerformed
        // TODO add your handling code here:
        changeOutputButton.setEnabled(false);
        recButton.setEnabled(false);
        stopButton.setEnabled(true);
        statusLabel.setText("Preparing to record...");
        Recorder.startRecording();
        statusLabel.setText("Recording...");
    }//GEN-LAST:event_recButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
        Recorder.stopRecording();
        statusLabel.setText("Creating output file...");
        if(onCompleteShowFile){
            JFileChooser chooser = new JFileChooser();
            File f = new File(outputDir);
            chooser.setSelectedFile(f);
            int retVal = chooser.showSaveDialog(this);
            if(retVal == JFileChooser.APPROVE_OPTION){
                outputDir = chooser.getSelectedFile().getAbsolutePath();
            }
        }
        int created = Recorder.createFile("file:"+outputDir);
        if(created > 1)
            statusLabel.setText("Unable to create output file.");
        else
            statusLabel.setText("Output file created!");
        changeOutputButton.setEnabled(true);
        recButton.setEnabled(true);
        stopButton.setEnabled(false);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void onCompleteCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCompleteCheckActionPerformed
        // TODO add your handling code here:
        onCompleteShowFile = onCompleteCheck.isSelected();
        outLabel.setEnabled(!onCompleteShowFile);
        changeOutputButton.setEnabled(!onCompleteShowFile);
        fileField.setEnabled(!onCompleteShowFile);
    }//GEN-LAST:event_onCompleteCheckActionPerformed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        titlePanel.setBackground(Color.GRAY);
        mainPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 5));
    }//GEN-LAST:event_formWindowLostFocus

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        Color c = new Color(153,0,0);
        titlePanel.setBackground(c);
        mainPanel.setBorder(BorderFactory.createLineBorder(c, 5));
    }//GEN-LAST:event_formWindowGainedFocus

    private void screenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_screenButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int retVal = chooser.showSaveDialog(this);
        if(retVal == JFileChooser.APPROVE_OPTION){
            chooser.setVisible(false);
            Recorder.takeScreenshot(chooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_screenButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecorderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecorderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changeOutputButton;
    private javax.swing.JLabel closeButton;
    private javax.swing.JTextField fileField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel minButton;
    private javax.swing.JCheckBox onCompleteCheck;
    private javax.swing.JLabel outLabel;
    private javax.swing.JButton recButton;
    private javax.swing.JButton screenButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton stopButton;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables
}
